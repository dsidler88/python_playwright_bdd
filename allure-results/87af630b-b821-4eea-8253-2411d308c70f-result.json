{"name": "test_i_can_use_the_ui_to_add_different_items_to_my_cart[chromium-Sauce Labs Backpack]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.", "trace": "fixturefunc = <function navigate_to_swaglabs at 0x10cce6de0>\nrequest = <FixtureRequest for <Function test_i_can_use_the_ui_to_add_different_items_to_my_cart[chromium-Sauce Labs Backpack]>>\nkwargs = {'page': <Page url='https://login.microsoftonline.com/a1681294-4857-4624-8d04-edaddb44ee26/saml2?whr=fpl.com'>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\nvenv/lib/python3.12/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/step_definition/swag_labs/test_swag_labs.py:30: in navigate_to_swaglabs\n    SwagLabs(page).login_swaglabs(\"standard_user\", \"secret_sauce\")\npage_objects/swag_labs/swag_labs_object.py:10: in login_swaglabs\n    self.page.type(SwagLabsLocators.USERNAME_FIELD, username)\nvenv/lib/python3.12/site-packages/playwright/sync_api/_generated.py:11580: in type\n    self._sync(\nvenv/lib/python3.12/site-packages/playwright/_impl/_page.py:900: in type\n    return await self._main_frame.type(**locals_to_params(locals()))\nvenv/lib/python3.12/site-packages/playwright/_impl/_frame.py:718: in type\n    await self._channel.send(\"type\", locals_to_params(locals()))\nvenv/lib/python3.12/site-packages/playwright/_impl/_connection.py:62: in send\n    return await self._connection.wrap_api_call(\nvenv/lib/python3.12/site-packages/playwright/_impl/_connection.py:492: in wrap_api_call\n    return await cb()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Channel object at 0x10d0ac530>\nmethod = 'type', params = {'selector': '#user-name', 'text': 'standard_user'}\nreturn_as_dict = False\n\n    async def inner_send(\n        self, method: str, params: Optional[Dict], return_as_dict: bool\n    ) -> Any:\n        if params is None:\n            params = {}\n        callback = self._connection._send_message_to_server(\n            self._object, method, params\n        )\n        if self._connection._error:\n            error = self._connection._error\n            self._connection._error = None\n            raise error\n        done, _ = await asyncio.wait(\n            {\n                self._connection._transport.on_error_future,\n                callback.future,\n            },\n            return_when=asyncio.FIRST_COMPLETED,\n        )\n        if not callback.future.done():\n            callback.future.cancel()\n>       result = next(iter(done)).result()\nE       playwright._impl._errors.TimeoutError: Timeout 30000ms exceeded.\n\nvenv/lib/python3.12/site-packages/playwright/_impl/_connection.py:100: TimeoutError"}, "description": "swag_labs.feature: I can use the UI to add different items to my cart", "steps": [{"name": "Go to url - 'https://www.saucedemo.com/'", "status": "passed", "parameters": [{"name": "url", "value": "'https://www.saucedemo.com/'"}], "start": 1702849832750, "stop": 1702849833591}], "attachments": [{"name": "screenshot", "source": "2d5db00b-47a9-4f51-a092-c099e386e808-attachment.png", "type": "image/png"}, {"name": "html_source", "source": "38ab5acb-0734-423c-923c-ad3f9b6e7852-attachment.html", "type": "text/html"}, {"name": "stdout", "source": "ba23cb9e-59f2-4e7a-82a1-6b261d5bc861-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'chromium'"}, {"name": "_pytest_bdd_example", "value": "{'Item': 'Sauce Labs Backpack'}"}], "start": 1702849832749, "stop": 1702849864032, "uuid": "ecd73f9d-1863-4e93-a62b-dc961c47c2f1", "historyId": "c8a58ee8a92287a2e910b207cb7fdabb", "testCaseId": "423e7d2e5cc2219decbf46a68f231826", "fullName": "tests.step_definition.swag_labs.test_swag_labs#test_i_can_use_the_ui_to_add_different_items_to_my_cart", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('page')"}, {"name": "tag", "value": "hotlink"}, {"name": "parentSuite", "value": "tests.step_definition.swag_labs"}, {"name": "suite", "value": "test_swag_labs"}, {"name": "host", "value": "LT358075.local"}, {"name": "thread", "value": "65189-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.step_definition.swag_labs.test_swag_labs"}]}